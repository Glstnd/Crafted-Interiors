networks:
  dev:

services:
  postgresDB:
    image: postgres:latest
    container_name: postgresDB
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: CraftedInteriors
      PGPORT: 5433
    expose:
      - "5433"
    ports:
      - "5433:5433"
    healthcheck:
      test: "pg_isready -h localhost -p 5433 -U admin -d CraftedInteriors"
      timeout: 10s
      retries: 20
    networks:
      - dev

  catalog_service:
    container_name: catalog_service
    build:
      context: ./Backend/CatalogService

    depends_on:
      - postgresDB
      - minio

    environment:
      DRIVER: asyncpg
      HOST: postgresDB
      PORT: 5433
      DATABASE: CraftedInteriors
      USER: admin
      PASSWORD: admin
      MINIO_HOST: minio

    ports:
      - "8001:8001"
    networks:
      - dev

  accounts_service:
    container_name: accounts_service
    build:
      context: ./Backend/AccountsService
    depends_on:
      - postgresDB
      - minio
    environment:
      DRIVER: asyncpg
      HOST: postgresDB
      PORT: 5433
      DATABASE: CraftedInteriors
      USER: admin
      PASSWORD: admin
      MINIO_HOST: minio
    ports:
      - "8000:8000"
    networks:
      - dev

  minio:
    image: minio/minio:latest
    container_name: minio
    restart: unless-stopped
    volumes:
      - minio-storage:/data
      - minio-config:/root/.minio
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=admin123
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - dev

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/static:/etc/nginx/html:ro
    ports:
      - "8081:8081"
    depends_on:
      - catalog_service
      - accounts_service
    networks:
      - dev

volumes:
  minio-storage:
  minio-config: